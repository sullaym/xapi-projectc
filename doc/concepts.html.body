<div class="row">
<h1>Concepts</h1>
<p>
When a virtual machine looks at its disk, it sees something which looks like
a real physical disk. This is an illusion. In reality the bytes of data
written to the &quot;virtual disk&quot; probably reside in a file in a filesystem or
in a logical volume on some physical storage system that the VM cannot see.
</p>

<p>
We call the real physical storage system a <b>Storage Repository</b> (SR).
</p>

<p>
We call the virtual disks within the SR <b>volumes</b>.
</p>

<h1>Manipulating volumes</h1>

<p>
When a VM is installed, a volume will be created. Typically this volume will
be deleted when the VM is uninstalled. The Xapi toolstack doesn't know how
to manipulate volumes on your storage system directly; instead it delegates
to &quot;Storage drivers&quot;: implementation-specific plugins which know
how to talk the storage-specific APIs. These storage drivers can be anything
from simple scripts in domain 0 to sophisticated services running somewhere
on the network.
 </p>

<p>
Consider for example a system using Linux LVM, where individual LVs are
mapped to VMs as virtual disks. The storage driver for LVM could implement
the <b>Volume.create</b> API by simply calling
</p>
<pre>
  lvcreate -n<size> ... other arguments
</pre>
</p>

<h1>Connecting volumes to VMs</h1>

<p>
VMs running on the Xen hypervisor use special shared-memory protocols to access
their disks and network interfaces. The &quot;server-side&quot; implementations
of these protocols are kernel drivers in Linux and FreeBSD. To supply the VMs
with data, the kernel drivers need to be able to read and write the physical disk
format, whether that is a .qcow2 file on NFS, a remote iSCSI volume or a local
block device. How does this work?
</p>

<h2>Disks as URIs</h2>

<p>
Every volume has one or more URIs, which describe how to access the data within
the volume. Examples include:
</p>
<ul>
<li>file:///local/block/device</li>
<li>nfs://server/export/path/file.qcow2</li>
<li>rbd://pool/volume</li>
<li>iscsi://target/lun</li>
</ul>
<p>
The Xapi toolstack takes the list of URIs provided by the Storage driver and
creates a connection between the VM and the disk. Xapi queries a
&quot;Datapath plugin&quot; based on the URI scheme. The Datapath plugin returns
Xen-specific connection details, including choice of backend (kernel blkback
or userspace qemu) and caching options.
</p>
</div>

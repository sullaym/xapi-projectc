<div class="row">
<h1>Architecture</h1>
<p>
The system is divided into two parts, intended for people with different expertise:
<ol>
<li>Volume Plugin: this is the storage control-plane. Xapi delegates Volume
    manipulation requests to these plugins, which know how to operate on the physical
    storage which could be anything from an NFS/CIFS server, an iSCSI target or
    a Ceph deployment.
    <b>No virtualisation knowledge is required to write a Volume Plugin</b>.
    The
    volume plugin do not perform I/O directly, instead they associate volumes
    with URIs which encode a particular method for accessing the disk data.
    For example an NFS plugin could expose URIs of the form
    <tt>nfs://server/path/file</tt>
    </li>
<li>Datapath Plugin: this is the storage data-plane.
    This is Xen-specific code which
    chooses the best way to connect VMs to individual disks.
    <b>Xen expertise is needed to write a datapath plugin.</b>
    Note that this code doesn't
    know about volumes; it only knows about specific volume access protocols
    such as NFS, iSCSI and RBD.
</ol>
</p>
<h2>Volume Plugins</h2>
<p>
Clients such as
<a href="http://www.openstack.org/">OpenStack</a>,
<a href="http://cloudstack.apache.org/">CloudStack</a>,
<a href="https://github.com/xenserver/xenadmin">XenCenter</a> and
<a href="https://xen-orchestra.com">Xen Orchestra</a>
create VMs and virtual disks by sending XenAPI requests to Xapi. Xapi doesn't
know how to manipulate storage directly, so it delegates storage operations
to a <b>Volume Plugin</b>. Each &quot;Storage Repository&quot; is
associated with exactly one Volume Plugin. These plugins know how to
<ul>
<li>create volumes;</li>
<li>destroy volumes;</li>
<li>snapshot volumes;</li>
<li>clone volumes;</li> and
<li>list the ways in which a volume may be accessed.</li>
</ul>
The following diagram shows a XenAPI client sending a VDI.create request causing
Xapi to send a Volume.create request to a specific plugin:
</p>
<img src="img/arch-vol-create.svg"
     alt="Diagram showing a XenAPI client sending a VDI.create request causing Xapi to send a Volume.create request to a plugin."/>

<h2>Datapath Plugins</h2>
<p>
The following diagram shows a XenAPI client sending a VM.start request. Xapi
calls <b>Volume.stat</b> to list the available access methods for the VM's disks.
The Ceph Volume Plugin returns a URL of the form <tt>rbd://server/pool</tt>
so Xapi consults its "rbd" Datapath plugin and asks &quot;how should I connect
this datapath to the VM?&quot;. The datapath plugin tells Xapi to use QEMU qdisk's
built-in support for RBD via librados, so Xapi tells libxl to set this up.
</p>
<img src="img/arch-vm-start.svg"
     alt="Diagram showing a XenAPI client sending a VM.start request."/>

</div>
